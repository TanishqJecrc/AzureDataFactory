{
	"name": "Flipkart ETL Flow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "FlipkartData",
						"type": "DatasetReference"
					},
					"name": "DataStreamIn"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "FlipkartETL",
						"type": "DatasetReference"
					},
					"name": "DataStreamOut"
				}
			],
			"transformations": [
				{
					"name": "FilterData"
				},
				{
					"name": "DerivedColumn"
				}
			],
			"scriptLines": [
				"source(output(",
				"          id as string,",
				"          title as string,",
				"          Rating as string,",
				"          maincateg as string,",
				"          platform as string,",
				"          actprice1 as string,",
				"          norating1 as integer,",
				"          noreviews1 as integer,",
				"          star_5f as string,",
				"          star_4f as string,",
				"          star_3f as string,",
				"          star_2f as string,",
				"          star_1f as string,",
				"          fulfilled1 as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> DataStreamIn",
				"DataStreamIn filter(norating1<10 || noreviews1<10) ~> FilterData",
				"FilterData derive(positive_review_ratio = (toFloat(star_5f))/(toFloat(norating1)),",
				"          total_stars = toDouble(star_1f)+toDouble(star_2f)+toDouble(star_3f)+toDouble(star_4f)+toDouble(star_5f)) ~> DerivedColumn",
				"DerivedColumn sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> DataStreamOut"
			]
		}
	}
}