{
	"name": "ProductsMarkup Flow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ProductsTable",
						"type": "DatasetReference"
					},
					"name": "ProductStreamIn"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ProductMarkupJson",
						"type": "DatasetReference"
					},
					"name": "ProductSteamOut",
					"description": "Export data to ProductMarkupJson"
				}
			],
			"transformations": [
				{
					"name": "CalculatedMarkup"
				}
			],
			"scriptLines": [
				"source(output(",
				"          ProductID as integer,",
				"          Name as string,",
				"          ProductNumber as string,",
				"          Color as string,",
				"          StandardCost as decimal(19,4),",
				"          ListPrice as decimal(19,4),",
				"          Size as string,",
				"          Weight as decimal(8,2),",
				"          ProductCategoryID as integer,",
				"          ProductModelID as integer,",
				"          SellStartDate as timestamp,",
				"          SellEndDate as timestamp,",
				"          DiscontinuedDate as timestamp,",
				"          ThumbNailPhoto as binary,",
				"          ThumbnailPhotoFileName as string,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> ProductStreamIn",
				"ProductStreamIn derive(ProductID = ERROR_FUNCTION(''),",
				"          Name = ERROR_FUNCTION(''),",
				"          ProductNumber = ERROR_FUNCTION(''),",
				"          Color = ERROR_FUNCTION(''),",
				"          StandardCost = ERROR_FUNCTION(''),",
				"          ListPrice = ERROR_FUNCTION(''),",
				"          Size = ERROR_FUNCTION(''),",
				"          Weight = ERROR_FUNCTION(''),",
				"          ProductCategoryID = ERROR_FUNCTION(''),",
				"          ProductModelID = ERROR_FUNCTION(''),",
				"          SellStartDate = ERROR_FUNCTION(''),",
				"          SellEndDate = ERROR_FUNCTION(''),",
				"          DiscontinuedDate = ERROR_FUNCTION(''),",
				"          ModifiedDate = ERROR_FUNCTION(''),",
				"          CalculatedMarkup = ListPrice/StandardCost) ~> CalculatedMarkup",
				"CalculatedMarkup sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> ProductSteamOut"
			]
		}
	}
}